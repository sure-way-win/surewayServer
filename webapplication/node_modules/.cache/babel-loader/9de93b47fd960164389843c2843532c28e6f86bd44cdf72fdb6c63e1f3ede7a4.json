{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\ASUS\\\\Documents\\\\GitHub\\\\e19-3yp-School-Van-Tracking-System\\\\code\\\\webapplication\\\\src\\\\components\\\\driverRegisterForm.jsx\";\nimport React from \"react\";\nimport Joi from \"joi-browser\";\nimport Form from \"./common/form\";\nimport { registerNewDriver } from \"../services/registerService\";\nimport { getVehicles } from \"../services/registerService\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nclass RegisterForm extends Form {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      data: {\n        firstName: \"\",\n        lastDName: \"\",\n        userDname: \"\",\n        password: \"\",\n        contactDNumber: \"\",\n        emailD: \"\",\n        addressD: \"\",\n        nicD: \"\",\n        licensenumberD: \"\",\n        assignedVehicle: \"\"\n      },\n      errors: {},\n      successMessage: \"\",\n      // New state variable for success message\n      vehicles: []\n    };\n    this.schema = {\n      firstName: Joi.string().required().label(\"First Name\"),\n      lastDName: Joi.string().required().label(\"Last Name\"),\n      userDname: Joi.string().required().label(\"Username\"),\n      password: Joi.string().required().min(6).label(\"Password\"),\n      contactDNumber: Joi.string().required().label(\"Contact Number\"),\n      emailD: Joi.string().required().label(\"Email\"),\n      addressD: Joi.string().required().label(\"Address\"),\n      nicD: Joi.string().required().min(10).max(12).label(\"NIC\"),\n      licensenumberD: Joi.string().required().label(\"License Number\"),\n      assignedVehicle: Joi.string().required().label(\"AssignedVehicle\")\n    };\n    this.doSubmit = async () => {\n      try {\n        const {\n          data\n        } = this.state;\n        await registerNewDriver({\n          firstName: data.firstName,\n          lastDName: data.lastDName,\n          userDname: data.userDname,\n          password: data.password,\n          contactDNumber: data.contactDNumber,\n          emailD: data.emailD,\n          addressD: data.addressD,\n          nicD: data.nicD,\n          licensenumberD: data.licensenumberD,\n          assignedVehicle: data.assignedVehicle\n        });\n        // Optionally, you can redirect the user or perform other actions after the bus is successfully added.\n        console.log(\"Driver added successfully!\");\n      } catch (error) {\n        console.error(\"Error adding driver:\", error.message);\n      }\n    };\n  }\n  async componentDidMount() {\n    const {\n      data\n    } = await getVehicles();\n    this.setState({\n      vehicles: data.registeredVehiclesWithoutDriver\n    });\n  }\n  render() {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"card\",\n      style: {\n        margin: \"20px\",\n        width: \"1287px\",\n        padding: \"40px\",\n        borderRadius: \"20px\",\n        height: \"800px\",\n        border: \"none\",\n        boxShadow: \"0px 0px 10px rgba(0, 0, 0, 0.1)\",\n        transition: \"transform 0.2s, background-color 0.2s\"\n      },\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n          children: \"Register a new driver\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 83,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n          onSubmit: this.handleSubmit,\n          children: [this.renderInput(\"firstName\", \"First Name\"), this.renderInput(\"lastDName\", \"Last Name\"), this.renderInput(\"userDname\", \"Username\"), this.renderInput(\"password\", \"Password\", \"password\"), this.renderInput(\"contactDNumber\", \"Contact Number\"), this.renderInput(\"emailD\", \"Email\"), this.renderInput(\"addressD\", \"Address\"), this.renderInput(\"nicD\", \"NIC\"), this.renderInput(\"licensenumberD\", \"License Number\"), \" \", /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 93,\n            columnNumber: 68\n          }, this), this.renderSelect(\"assignedVehicle\", \"Assigned Vehicle\", this.state.vehicles), \" \", /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 100,\n            columnNumber: 13\n          }, this), this.renderButton(\"Register\"), \" \", /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 101,\n            columnNumber: 45\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 84,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 82,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 68,\n      columnNumber: 7\n    }, this);\n  }\n}\nexport default RegisterForm;","map":{"version":3,"names":["React","Joi","Form","registerNewDriver","getVehicles","jsxDEV","_jsxDEV","RegisterForm","constructor","args","state","data","firstName","lastDName","userDname","password","contactDNumber","emailD","addressD","nicD","licensenumberD","assignedVehicle","errors","successMessage","vehicles","schema","string","required","label","min","max","doSubmit","console","log","error","message","componentDidMount","setState","registeredVehiclesWithoutDriver","render","className","style","margin","width","padding","borderRadius","height","border","boxShadow","transition","children","fileName","_jsxFileName","lineNumber","columnNumber","onSubmit","handleSubmit","renderInput","renderSelect","renderButton"],"sources":["C:/Users/ASUS/Documents/GitHub/e19-3yp-School-Van-Tracking-System/code/webapplication/src/components/driverRegisterForm.jsx"],"sourcesContent":["import React from \"react\";\nimport Joi from \"joi-browser\";\nimport Form from \"./common/form\";\nimport { registerNewDriver } from \"../services/registerService\";\nimport { getVehicles } from \"../services/registerService\";\n\nclass RegisterForm extends Form {\n  state = {\n    data: {\n      firstName: \"\",\n      lastDName: \"\",\n      userDname: \"\",\n      password: \"\",\n      contactDNumber: \"\",\n      emailD: \"\",\n      addressD: \"\",\n      nicD: \"\",\n      licensenumberD: \"\",\n      assignedVehicle: \"\",\n    },\n    errors: {},\n    successMessage: \"\", // New state variable for success message\n    vehicles: [],\n  };\n\n  schema = {\n    firstName: Joi.string().required().label(\"First Name\"),\n    lastDName: Joi.string().required().label(\"Last Name\"),\n    userDname: Joi.string().required().label(\"Username\"),\n    password: Joi.string().required().min(6).label(\"Password\"),\n    contactDNumber: Joi.string().required().label(\"Contact Number\"),\n    emailD: Joi.string().required().label(\"Email\"),\n    addressD: Joi.string().required().label(\"Address\"),\n    nicD: Joi.string().required().min(10).max(12).label(\"NIC\"),\n    licensenumberD: Joi.string().required().label(\"License Number\"),\n    assignedVehicle: Joi.string().required().label(\"AssignedVehicle\"),\n  };\n\n  async componentDidMount() {\n    const { data } = await getVehicles();\n    this.setState({ vehicles: data.registeredVehiclesWithoutDriver });\n  }\n\n  doSubmit = async () => {\n    try {\n      const { data } = this.state;\n      await registerNewDriver({\n        firstName: data.firstName,\n        lastDName: data.lastDName,\n        userDname: data.userDname,\n        password: data.password,\n        contactDNumber: data.contactDNumber,\n        emailD: data.emailD,\n        addressD: data.addressD,\n        nicD: data.nicD,\n        licensenumberD: data.licensenumberD,\n        assignedVehicle: data.assignedVehicle,\n      });\n      // Optionally, you can redirect the user or perform other actions after the bus is successfully added.\n      console.log(\"Driver added successfully!\");\n    } catch (error) {\n      console.error(\"Error adding driver:\", error.message);\n    }\n  };\n\n  render() {\n    return (\n      <div\n        className=\"card\"\n        style={{\n          margin: \"20px\",\n\n          width: \"1287px\",\n          padding: \"40px\",\n          borderRadius: \"20px\",\n          height: \"800px\",\n          border: \"none\",\n          boxShadow: \"0px 0px 10px rgba(0, 0, 0, 0.1)\",\n          transition: \"transform 0.2s, background-color 0.2s\",\n        }}\n      >\n        <div>\n          <h1>Register a new driver</h1>\n          <form onSubmit={this.handleSubmit}>\n            {this.renderInput(\"firstName\", \"First Name\")}\n            {this.renderInput(\"lastDName\", \"Last Name\")}\n            {this.renderInput(\"userDname\", \"Username\")}\n            {this.renderInput(\"password\", \"Password\", \"password\")}\n            {this.renderInput(\"contactDNumber\", \"Contact Number\")}\n            {this.renderInput(\"emailD\", \"Email\")}\n            {this.renderInput(\"addressD\", \"Address\")}\n            {this.renderInput(\"nicD\", \"NIC\")}\n            {this.renderInput(\"licensenumberD\", \"License Number\")} <br />\n            {/* {this.renderInput(\"licensenumberD\", \"License Number\")} <br /> */}\n            {this.renderSelect(\n              \"assignedVehicle\",\n              \"Assigned Vehicle\",\n              this.state.vehicles\n            )}{\" \"}\n            <br />\n            {this.renderButton(\"Register\")} <br />\n            {/* {this.renderSelect(\"genreId\", \"Genre\", this.state.bu)} */}\n          </form>\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default RegisterForm;\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}