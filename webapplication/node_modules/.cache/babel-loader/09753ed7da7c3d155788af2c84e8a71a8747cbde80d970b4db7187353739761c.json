{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\ASUS\\\\Documents\\\\GitHub\\\\e19-3yp-School-Van-Tracking-System\\\\code\\\\webapplication\\\\src\\\\components\\\\accidentAlerts.jsx\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from \"react\";\nimport io from \"socket.io-client\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst AccidentAlers = () => {\n  _s();\n  const [messages, setMessages] = useState([]);\n  useEffect(() => {\n    // Replace 'http://13.51.79.199:3001' with the URL where your Socket.IO server is running\n    const socket = io(\"http://13.51.79.199:3002\");\n\n    // Replace 'SN0013' with the specific thingName you are interested in\n    const thingName = \"SN0014\";\n\n    // Event handler for receiving messages from the server based on thingName\n    socket.on(thingName, message => {\n      console.log(`Received message for ${thingName} from server:`, message);\n      setMessages(prevMessages => [...prevMessages, message]);\n    });\n\n    // Event handler for connecting to the Socket.IO server\n    socket.on(\"connect\", () => {\n      console.log(\"Connected to Socket.IO server\");\n\n      // Emit a 'join' event to join a room based on thingName\n      // socket.emit(\"join\", thingName);\n    });\n\n    // Event handler for potential errors\n    socket.on(\"error\", error => {\n      console.error(\"Socket.IO error:\", error);\n      // Handle the error as needed\n    });\n\n    // Cleanup on component unmount\n    return () => {\n      console.log(\"Disconnecting from Socket.IO server\");\n      socket.disconnect();\n    };\n  }, []); // Empty dependency array ensures that the effect runs only once\n\n  // Log the current state of messages whenever it changes\n  useEffect(() => {\n    console.log(\"Current messages state:\", messages);\n  }, [messages]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Received AWS IoT Messages for SN0013:\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n      children: messages.map((message, index) => /*#__PURE__*/_jsxDEV(\"li\", {\n        children: JSON.stringify(message)\n      }, index, false, {\n        fileName: _jsxFileName,\n        lineNumber: 51,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 47,\n    columnNumber: 5\n  }, this);\n};\n_s(AccidentAlers, \"BxyhfWWpnSbijcu7qFgrB+X/mWM=\");\n_c = AccidentAlers;\nexport default AccidentAlers;\nvar _c;\n$RefreshReg$(_c, \"AccidentAlers\");","map":{"version":3,"names":["React","useEffect","useState","io","jsxDEV","_jsxDEV","AccidentAlers","_s","messages","setMessages","socket","thingName","on","message","console","log","prevMessages","error","disconnect","children","fileName","_jsxFileName","lineNumber","columnNumber","map","index","JSON","stringify","_c","$RefreshReg$"],"sources":["C:/Users/ASUS/Documents/GitHub/e19-3yp-School-Van-Tracking-System/code/webapplication/src/components/accidentAlerts.jsx"],"sourcesContent":["import React, { useEffect, useState } from \"react\";\r\nimport io from \"socket.io-client\";\r\n\r\nconst AccidentAlers = () => {\r\n  const [messages, setMessages] = useState([]);\r\n\r\n  useEffect(() => {\r\n    // Replace 'http://13.51.79.199:3001' with the URL where your Socket.IO server is running\r\n    const socket = io(\"http://13.51.79.199:3002\");\r\n\r\n    // Replace 'SN0013' with the specific thingName you are interested in\r\n    const thingName = \"SN0014\";\r\n\r\n    // Event handler for receiving messages from the server based on thingName\r\n    socket.on(thingName, (message) => {\r\n      console.log(`Received message for ${thingName} from server:`, message);\r\n      setMessages((prevMessages) => [...prevMessages, message]);\r\n    });\r\n\r\n    // Event handler for connecting to the Socket.IO server\r\n    socket.on(\"connect\", () => {\r\n      console.log(\"Connected to Socket.IO server\");\r\n\r\n      // Emit a 'join' event to join a room based on thingName\r\n      // socket.emit(\"join\", thingName);\r\n    });\r\n\r\n    // Event handler for potential errors\r\n    socket.on(\"error\", (error) => {\r\n      console.error(\"Socket.IO error:\", error);\r\n      // Handle the error as needed\r\n    });\r\n\r\n    // Cleanup on component unmount\r\n    return () => {\r\n      console.log(\"Disconnecting from Socket.IO server\");\r\n      socket.disconnect();\r\n    };\r\n  }, []); // Empty dependency array ensures that the effect runs only once\r\n\r\n  // Log the current state of messages whenever it changes\r\n  useEffect(() => {\r\n    console.log(\"Current messages state:\", messages);\r\n  }, [messages]);\r\n\r\n  return (\r\n    <div>\r\n      <h1>Received AWS IoT Messages for SN0013:</h1>\r\n      <ul>\r\n        {messages.map((message, index) => (\r\n          <li key={index}>{JSON.stringify(message)}</li>\r\n        ))}\r\n      </ul>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default AccidentAlers;\r\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,SAAS,EAAEC,QAAQ,QAAQ,OAAO;AAClD,OAAOC,EAAE,MAAM,kBAAkB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAElC,MAAMC,aAAa,GAAGA,CAAA,KAAM;EAAAC,EAAA;EAC1B,MAAM,CAACC,QAAQ,EAAEC,WAAW,CAAC,GAAGP,QAAQ,CAAC,EAAE,CAAC;EAE5CD,SAAS,CAAC,MAAM;IACd;IACA,MAAMS,MAAM,GAAGP,EAAE,CAAC,0BAA0B,CAAC;;IAE7C;IACA,MAAMQ,SAAS,GAAG,QAAQ;;IAE1B;IACAD,MAAM,CAACE,EAAE,CAACD,SAAS,EAAGE,OAAO,IAAK;MAChCC,OAAO,CAACC,GAAG,CAAE,wBAAuBJ,SAAU,eAAc,EAAEE,OAAO,CAAC;MACtEJ,WAAW,CAAEO,YAAY,IAAK,CAAC,GAAGA,YAAY,EAAEH,OAAO,CAAC,CAAC;IAC3D,CAAC,CAAC;;IAEF;IACAH,MAAM,CAACE,EAAE,CAAC,SAAS,EAAE,MAAM;MACzBE,OAAO,CAACC,GAAG,CAAC,+BAA+B,CAAC;;MAE5C;MACA;IACF,CAAC,CAAC;;IAEF;IACAL,MAAM,CAACE,EAAE,CAAC,OAAO,EAAGK,KAAK,IAAK;MAC5BH,OAAO,CAACG,KAAK,CAAC,kBAAkB,EAAEA,KAAK,CAAC;MACxC;IACF,CAAC,CAAC;;IAEF;IACA,OAAO,MAAM;MACXH,OAAO,CAACC,GAAG,CAAC,qCAAqC,CAAC;MAClDL,MAAM,CAACQ,UAAU,CAAC,CAAC;IACrB,CAAC;EACH,CAAC,EAAE,EAAE,CAAC,CAAC,CAAC;;EAER;EACAjB,SAAS,CAAC,MAAM;IACda,OAAO,CAACC,GAAG,CAAC,yBAAyB,EAAEP,QAAQ,CAAC;EAClD,CAAC,EAAE,CAACA,QAAQ,CAAC,CAAC;EAEd,oBACEH,OAAA;IAAAc,QAAA,gBACEd,OAAA;MAAAc,QAAA,EAAI;IAAqC;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC,eAC9ClB,OAAA;MAAAc,QAAA,EACGX,QAAQ,CAACgB,GAAG,CAAC,CAACX,OAAO,EAAEY,KAAK,kBAC3BpB,OAAA;QAAAc,QAAA,EAAiBO,IAAI,CAACC,SAAS,CAACd,OAAO;MAAC,GAA/BY,KAAK;QAAAL,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAA+B,CAC9C;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACA,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACF,CAAC;AAEV,CAAC;AAAChB,EAAA,CApDID,aAAa;AAAAsB,EAAA,GAAbtB,aAAa;AAsDnB,eAAeA,aAAa;AAAC,IAAAsB,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}